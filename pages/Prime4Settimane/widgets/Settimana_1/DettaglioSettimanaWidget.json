{
  "backgroundColor": "#FFFFFF",
  "borderColor": "#E0DEDE",
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "borderWidth": "1",
  "bottomRow": 171,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "defaultModel": "{ \"data\": \"{{TabellaSettimane.triggeredRow}}\" }",
  "dynamicBindingPathList": [
    {
      "key": "theme"
    },
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    },
    {
      "key": "defaultModel"
    }
  ],
  "dynamicHeight": "FIXED",
  "dynamicPropertyPathList": [
    {
      "key": "onInviaClick"
    }
  ],
  "dynamicTriggerPathList": [
    {
      "key": "onInviaClick"
    }
  ],
  "events": [
    "onInviaClick"
  ],
  "isCanvas": false,
  "isLoading": false,
  "isSearchWildcard": true,
  "isVisible": true,
  "key": "jwwzragbmc",
  "leftColumn": 0,
  "maxDynamicHeight": 9000,
  "minDynamicHeight": 4,
  "mobileBottomRow": 112,
  "mobileLeftColumn": 7,
  "mobileRightColumn": 30,
  "mobileTopRow": 82,
  "needsErrorInfo": false,
  "onInviaClick": "{{DatiWidgetQuery.aggiornaValutazione()}}",
  "parentColumnSpace": 20.125,
  "parentId": "fiz98bwyop",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "rightColumn": 64,
  "shouldScrollContents": true,
  "srcDoc": {
    "css": "#root {\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n\n.custom-table-wrapper {\n  background-color: var(--appsmith-theme-backgroundColor, #ffffff);\n  padding: 20px;\n  border-radius: var(--appsmith-theme-borderRadius);\n  height: 100vh;\n  width: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n  font-family: inherit;\n  color: var(--appsmith-theme-textColor, #333);\n  scroll-behavior: smooth;\n  position: relative;\n  box-sizing: border-box;\n  scrollbar-width: thin;\n  scrollbar-color: #c1c1c1 #f1f1f1;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n}\n\n.custom-table-wrapper::-webkit-scrollbar {\n  width: 8px;\n}\n\n.custom-table-wrapper::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 4px;\n}\n\n.custom-table-wrapper::-webkit-scrollbar-thumb {\n  background: #c1c1c1;\n  border-radius: 4px;\n  transition: background 0.3s ease;\n}\n\n.custom-table-wrapper::-webkit-scrollbar-thumb:hover {\n  background: #a8a8a8;\n}\n\n.header-info {\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border: 2px solid #dee2e6;\n  border-radius: 12px;\n  padding: 20px;\n  margin: 0 0 25px 0;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  flex-shrink: 0;\n  animation: slideDown 0.6s ease-out;\n}\n\n.header-title {\n  margin: 0;\n  font-size: 1.3em;\n  font-weight: 600;\n  color: #495057;\n  text-align: center;\n  line-height: 1.4;\n  letter-spacing: 0.02em;\n}\n\n.header-title .highlight {\n  color: var(--appsmith-theme-primaryColor, #754ffe);\n  font-weight: 700;\n  background: linear-gradient(45deg, var(--appsmith-theme-primaryColor, #754ffe), #593cbe);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.table-container {\n  flex: 1;\n  overflow-y: auto;\n  margin-bottom: 20px;\n}\n\n.detail-table {\n  width: 100%;\n  max-width: none;\n  margin: 0 auto;\n  border-collapse: collapse;\n  table-layout: fixed;\n  background: white;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.detail-table th, .detail-table td {\n  border: 1px solid #E0E0E0;\n  padding: 15px;\n  text-align: left;\n  vertical-align: middle;\n  word-wrap: break-word;\n  transition: background-color 0.2s ease;\n}\n\n.detail-table tr:hover {\n  background-color: #f8f9fa;\n}\n\n.detail-table th {\n  background-color: #FAFAFA;\n  font-weight: 600;\n  width: 35%;\n  font-size: 0.95em;\n}\n\n.detail-table td {\n  width: 65%;\n}\n\n/* STELLE CON GESTIONE REACT DELL'HOVER */\n.star-rating {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n  display: flex;\n  gap: 5px;\n  align-items: center;\n}\n\n.star {\n  display: inline-block;\n  cursor: pointer;\n  font-size: 2em;\n  transition: all 0.2s ease;\n  position: relative;\n}\n\n/* Stelle attive (con valore o in hover) */\n.star:not(.inactive) {\n  color: #ffd700;\n  text-shadow: 0 0 3px rgba(255, 215, 0, 0.4), 0 0 5px rgba(255, 215, 0, 0.2);\n  transform: scale(1.05);\n}\n\n/* Stelle inactive */\n.star.inactive {\n  color: #d0d0d0;\n  text-shadow: none;\n  transform: scale(1);\n}\n\n/* Stella attualmente hoverate */\n.star.hovered {\n  color: #ffed4e !important;\n  transform: scale(1.1) !important;\n  text-shadow: 0 0 4px rgba(255, 237, 78, 0.5), 0 0 8px rgba(255, 237, 78, 0.3) !important;\n}\n\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\ninput[type=text], textarea {\n  font-size: 1em;\n  border: 2px solid #d0d0d0;\n  background: #fff;\n  border-radius: 6px;\n  width: 100%;\n  padding: 10px 12px;\n  resize: vertical;\n  box-sizing: border-box;\n  transition: all 0.3s ease;\n  font-family: inherit;\n}\n\ninput[type=text]:focus, textarea:focus {\n  outline: none;\n  border-color: var(--appsmith-theme-primaryColor, #754ffe);\n  box-shadow: 0 0 0 3px rgba(117, 79, 254, 0.1);\n  background: #fefefe;\n}\n\ntextarea {\n  min-height: 60px;\n  line-height: 1.4;\n}\n\n.button-invia {\n  display: block;\n  margin: 20px auto 0 auto;\n  background: linear-gradient(135deg, var(--appsmith-theme-primaryColor, #754ffe) 0%, #593cbe 100%);\n  color: #fff;\n  border: none;\n  border-radius: 8px;\n  padding: 15px 35px;\n  font-weight: bold;\n  font-size: 1.1em;\n  box-shadow: 0 4px 15px rgba(117, 79, 254, 0.3);\n  cursor: pointer;\n  transition: all 0.3s ease;\n  flex-shrink: 0;\n  min-width: 150px;\n}\n\n.button-invia:hover {\n  background: linear-gradient(135deg, #593cbe 0%, #754ffe 100%);\n  transform: translateY(-2px);\n  box-shadow: 0 6px 20px rgba(117, 79, 254, 0.4);\n}\n\n.button-invia:active {\n  transform: translateY(0);\n  box-shadow: 0 2px 10px rgba(117, 79, 254, 0.3);\n}\n\n.button-invia:disabled {\n  background: #cccccc;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n@media (max-width: 768px) {\n  .custom-table-wrapper {\n    padding: 15px;\n  }\n  .header-info {\n    padding: 15px;\n    margin-bottom: 20px;\n  }\n  .header-title {\n    font-size: 1.1em;\n    line-height: 1.3;\n  }\n  .detail-table th {\n    width: 40%;\n    font-size: 0.9em;\n  }\n  .detail-table td {\n    width: 60%;\n  }\n  .star {\n    font-size: 1.5em;\n  }\n  .detail-table th, .detail-table td {\n    padding: 12px 8px;\n  }\n}\n.detail-table {\n  animation: fadeIn 0.5s ease-in;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n.detail-table tr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n\n.detail-table tr:nth-child(even):hover {\n  background-color: #f0f0f0;\n}",
    "html": "<div id=\"root\"></div>",
    "js": "import React from \"https://esm.sh/react@18.2.0\";\nimport ReactDOM from \"https://esm.sh/react-dom@18.2.0\";\nfunction parseData(obj) {\n  if (typeof obj === 'string') {\n    try {\n      const parsed = JSON.parse(obj);\n      if (parsed.data && typeof parsed.data === 'string') {\n        return JSON.parse(parsed.data);\n      }\n      return parsed;\n    } catch {\n      return {\n        error: \"Errore di parsing JSON\"\n      };\n    }\n  } else if (obj && typeof obj.data === 'string') {\n    try {\n      return JSON.parse(obj.data);\n    } catch {\n      return {\n        error: \"Errore di parsing JSON\"\n      };\n    }\n  }\n  return obj;\n}\nfunction StarRating({\n  value = 0,\n  onChange\n}) {\n  const [hoveredStar, setHoveredStar] = React.useState(0);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"star-rating\",\n    onMouseLeave: () => setHoveredStar(0)\n  }, [1, 2, 3, 4, 5].map(star => {\n    // Determina se la stella dovrebbe essere evidenziata\n    const isHighlighted = hoveredStar > 0 ? star <= hoveredStar : star <= value;\n    const isHovered = hoveredStar > 0 && star === hoveredStar;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: star,\n      className: `star ${!isHighlighted ? 'inactive' : ''} ${isHovered ? 'hovered' : ''}`,\n      onClick: () => onChange(star),\n      onMouseEnter: () => setHoveredStar(star),\n      title: `Valuta ${star}/5`\n    }, \"\\u2605\");\n  }));\n}\n// COMPONENTE HEADER: usa i dati dal parametro data\nfunction HeaderInfo({\n  data\n}) {\n  const formatDate = dateString => {\n    if (!dateString) return 'N/A';\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('it-IT', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric'\n      });\n    } catch {\n      return 'N/A';\n    }\n  };\n\n  // Estrai i dati necessari dall'oggetto data del widget\n  const nome = data.Nome || 'N/A';\n  const neg = data.NEG || 'N/A';\n  const dataAssunzione = data.DataAssunzione || null;\n  const dataFineContratto = data.DataFineContratto || null;\n\n  // Debug: mostra i dati disponibili\n  console.log(\"Dati disponibili per HeaderInfo:\", {\n    nome,\n    neg,\n    dataAssunzione,\n    dataFineContratto\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-info\"\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"header-title\"\n  }, \"1\\xB0 Settimana di \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"highlight\"\n  }, nome), \" assunta su \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"highlight\"\n  }, neg), \" il \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"highlight\"\n  }, formatDate(dataAssunzione)), \" con scadenza al \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"highlight\"\n  }, formatDate(dataFineContratto))));\n}\nfunction DetailsTable({\n  fields,\n  onFieldChange,\n  editingNotes,\n  onNoteFocus,\n  onNoteChange,\n  onNoteBlur\n}) {\n  function renderInput(key, value) {\n    const noteMatch = key.match(/^[12].*Note.*/i);\n    const scoreMatch = key.match(/^[12](?!.*Note).*/i);\n    if (noteMatch) {\n      return /*#__PURE__*/React.createElement(\"textarea\", {\n        value: key in editingNotes ? editingNotes[key] : value ?? '',\n        onFocus: () => onNoteFocus(key),\n        onChange: e => onNoteChange(key, e.target.value),\n        onBlur: () => onNoteBlur(key),\n        rows: 2,\n        placeholder: \"Scrivi una nota...\",\n        autoFocus: false\n      });\n    } else if (scoreMatch) {\n      return /*#__PURE__*/React.createElement(StarRating, {\n        value: parseInt(value) || 0,\n        onChange: val => onFieldChange(key, val)\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"span\", null, String(value ?? \"\"));\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"detail-table\"\n  }, /*#__PURE__*/React.createElement(\"tbody\", null, Object.entries(fields).map(([key, value]) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: key\n  }, /*#__PURE__*/React.createElement(\"th\", null, key), /*#__PURE__*/React.createElement(\"td\", null, renderInput(key, value))))));\n}\nfunction App() {\n  const [data, setData] = React.useState(() => parseData(appsmith.model.data));\n  const [edited, setEdited] = React.useState({});\n  const [editingNotes, setEditingNotes] = React.useState({});\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const containerRef = React.useRef(null);\n  React.useEffect(() => {\n    const parsedData = parseData(appsmith.model.data);\n    setData(parsedData);\n    setEdited({});\n    setEditingNotes({});\n\n    // FORZA lo scroll all'inizio\n    setTimeout(() => {\n      if (containerRef.current) {\n        containerRef.current.scrollTop = 0;\n      }\n      // Forza anche lo scroll della finestra\n      document.documentElement.scrollTop = 0;\n      document.body.scrollTop = 0;\n      window.scrollTo(0, 0);\n    }, 10);\n  }, [appsmith.model.data]);\n  React.useEffect(() => {\n    // Scroll iniziale immediato\n    if (containerRef.current) {\n      containerRef.current.scrollTop = 0;\n    }\n    document.documentElement.scrollTop = 0;\n    document.body.scrollTop = 0;\n    window.scrollTo(0, 0);\n  }, []);\n  function updateField(key, value) {\n    const newEdited = {\n      ...edited,\n      [key]: value\n    };\n    setEdited(newEdited);\n    appsmith.updateModel({\n      data: JSON.stringify(data),\n      edited: JSON.stringify(newEdited),\n      allData: {\n        ...data,\n        ...newEdited\n      },\n      isReady: true\n    });\n  }\n  function handleNoteFocus(key) {\n    setEditingNotes(old => ({\n      ...old,\n      [key]: edited[key] || data[key] || \"\"\n    }));\n  }\n  function handleNoteChange(key, value) {\n    setEditingNotes(old => ({\n      ...old,\n      [key]: value\n    }));\n  }\n  function handleNoteBlur(key) {\n    updateField(key, editingNotes[key]);\n    setEditingNotes(old => {\n      const obj = {\n        ...old\n      };\n      delete obj[key];\n      return obj;\n    });\n  }\n  async function onInviaClick() {\n    setIsSubmitting(true);\n    try {\n      const finalData = {\n        ...data,\n        ...edited\n      };\n      console.log(\"Dati finali da salvare:\", finalData);\n      appsmith.updateModel({\n        data: JSON.stringify(data),\n        edited: JSON.stringify(edited),\n        allData: finalData,\n        isReady: true\n      });\n      await new Promise(resolve => setTimeout(resolve, 100));\n      await appsmith.triggerEvent(\"onInviaClick\");\n    } catch (error) {\n      console.error(\"Errore durante l'invio:\", error);\n      alert(\"Errore durante il salvataggio: \" + error.message);\n    } finally {\n      setIsSubmitting(false);\n    }\n  }\n  const displayValues = {};\n  Object.keys(data).forEach(key => {\n    displayValues[key] = edited.hasOwnProperty(key) ? edited[key] : data[key];\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-table-wrapper\",\n    ref: containerRef\n  }, /*#__PURE__*/React.createElement(HeaderInfo, {\n    data: data\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-container\"\n  }, /*#__PURE__*/React.createElement(DetailsTable, {\n    fields: displayValues,\n    onFieldChange: updateField,\n    editingNotes: editingNotes,\n    onNoteFocus: handleNoteFocus,\n    onNoteChange: handleNoteChange,\n    onNoteBlur: handleNoteBlur\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button-invia\",\n    onClick: onInviaClick,\n    type: \"button\",\n    disabled: isSubmitting\n  }, isSubmitting ? \"Invio in corso...\" : \"Invia\"));\n}\nfunction renderApp() {\n  ReactDOM.render(/*#__PURE__*/React.createElement(App, null), document.getElementById(\"root\"));\n\n  // Forza scroll immediato dopo il render\n  setTimeout(() => {\n    document.documentElement.scrollTop = 0;\n    document.body.scrollTop = 0;\n    window.scrollTo(0, 0);\n  }, 0);\n}\nappsmith.onReady(() => {\n  // Scroll immediato all'inizio\n  document.documentElement.scrollTop = 0;\n  document.body.scrollTop = 0;\n  window.scrollTo(0, 0);\n  renderApp();\n});\nappsmith.onModelChange(() => {\n  renderApp();\n});"
  },
  "theme": "{{appsmith.theme}}",
  "topRow": 0,
  "type": "CUSTOM_WIDGET",
  "uncompiledSrcDoc": {
    "css": "#root {\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n\n.custom-table-wrapper {\n  background-color: var(--appsmith-theme-backgroundColor, #ffffff);\n  padding: 20px;\n  border-radius: var(--appsmith-theme-borderRadius);\n  height: 100vh;\n  width: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n  font-family: inherit;\n  color: var(--appsmith-theme-textColor, #333);\n  scroll-behavior: smooth;\n  position: relative;\n  box-sizing: border-box;\n  scrollbar-width: thin;\n  scrollbar-color: #c1c1c1 #f1f1f1;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n}\n\n.custom-table-wrapper::-webkit-scrollbar {\n  width: 8px;\n}\n\n.custom-table-wrapper::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 4px;\n}\n\n.custom-table-wrapper::-webkit-scrollbar-thumb {\n  background: #c1c1c1;\n  border-radius: 4px;\n  transition: background 0.3s ease;\n}\n\n.custom-table-wrapper::-webkit-scrollbar-thumb:hover {\n  background: #a8a8a8;\n}\n\n.header-info {\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border: 2px solid #dee2e6;\n  border-radius: 12px;\n  padding: 20px;\n  margin: 0 0 25px 0;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n  flex-shrink: 0;\n  animation: slideDown 0.6s ease-out;\n}\n\n.header-title {\n  margin: 0;\n  font-size: 1.3em;\n  font-weight: 600;\n  color: #495057;\n  text-align: center;\n  line-height: 1.4;\n  letter-spacing: 0.02em;\n}\n\n.header-title .highlight {\n  color: var(--appsmith-theme-primaryColor, #754ffe);\n  font-weight: 700;\n  background: linear-gradient(45deg, var(--appsmith-theme-primaryColor, #754ffe), #593cbe);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.table-container {\n  flex: 1;\n  overflow-y: auto;\n  margin-bottom: 20px;\n}\n\n.detail-table {\n  width: 100%;\n  max-width: none;\n  margin: 0 auto;\n  border-collapse: collapse;\n  table-layout: fixed;\n  background: white;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.detail-table th, .detail-table td {\n  border: 1px solid #E0E0E0;\n  padding: 15px;\n  text-align: left;\n  vertical-align: middle;\n  word-wrap: break-word;\n  transition: background-color 0.2s ease;\n}\n\n.detail-table tr:hover {\n  background-color: #f8f9fa;\n}\n\n.detail-table th {\n  background-color: #FAFAFA;\n  font-weight: 600;\n  width: 35%;\n  font-size: 0.95em;\n}\n\n.detail-table td {\n  width: 65%;\n}\n\n/* STELLE CON GESTIONE REACT DELL'HOVER */\n.star-rating {\n  direction: ltr;\n  unicode-bidi: bidi-override;\n  display: flex;\n  gap: 5px;\n  align-items: center;\n}\n\n.star {\n  display: inline-block;\n  cursor: pointer;\n  font-size: 2em;\n  transition: all 0.2s ease;\n  position: relative;\n}\n\n/* Stelle attive (con valore o in hover) */\n.star:not(.inactive) {\n  color: #ffd700;\n  text-shadow: \n    0 0 3px rgba(255, 215, 0, 0.4),\n    0 0 5px rgba(255, 215, 0, 0.2);\n  transform: scale(1.05);\n}\n\n/* Stelle inactive */\n.star.inactive {\n  color: #d0d0d0;\n  text-shadow: none;\n  transform: scale(1);\n}\n\n/* Stella attualmente hoverate */\n.star.hovered {\n  color: #ffed4e !important;\n  transform: scale(1.1) !important;\n  text-shadow: \n    0 0 4px rgba(255, 237, 78, 0.5),\n    0 0 8px rgba(255, 237, 78, 0.3) !important;\n}\n\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\ninput[type=\"text\"], textarea {\n  font-size: 1em;\n  border: 2px solid #d0d0d0;\n  background: #fff;\n  border-radius: 6px;\n  width: 100%;\n  padding: 10px 12px;\n  resize: vertical;\n  box-sizing: border-box;\n  transition: all 0.3s ease;\n  font-family: inherit;\n}\n\ninput[type=\"text\"]:focus, textarea:focus {\n  outline: none;\n  border-color: var(--appsmith-theme-primaryColor, #754ffe);\n  box-shadow: 0 0 0 3px rgba(117, 79, 254, 0.1);\n  background: #fefefe;\n}\n\ntextarea {\n  min-height: 60px;\n  line-height: 1.4;\n}\n\n.button-invia {\n  display: block;\n  margin: 20px auto 0 auto;\n  background: linear-gradient(135deg, var(--appsmith-theme-primaryColor, #754ffe) 0%, #593cbe 100%);\n  color: #fff;\n  border: none;\n  border-radius: 8px;\n  padding: 15px 35px;\n  font-weight: bold;\n  font-size: 1.1em;\n  box-shadow: 0 4px 15px rgba(117, 79, 254, 0.3);\n  cursor: pointer;\n  transition: all 0.3s ease;\n  flex-shrink: 0;\n  min-width: 150px;\n}\n\n.button-invia:hover {\n  background: linear-gradient(135deg, #593cbe 0%, #754ffe 100%);\n  transform: translateY(-2px);\n  box-shadow: 0 6px 20px rgba(117, 79, 254, 0.4);\n}\n\n.button-invia:active {\n  transform: translateY(0);\n  box-shadow: 0 2px 10px rgba(117, 79, 254, 0.3);\n}\n\n.button-invia:disabled {\n  background: #cccccc;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n@media (max-width: 768px) {\n  .custom-table-wrapper {\n    padding: 15px;\n  }\n  \n  .header-info {\n    padding: 15px;\n    margin-bottom: 20px;\n  }\n  \n  .header-title {\n    font-size: 1.1em;\n    line-height: 1.3;\n  }\n  \n  .detail-table th {\n    width: 40%;\n    font-size: 0.9em;\n  }\n  \n  .detail-table td {\n    width: 60%;\n  }\n  \n  .star {\n    font-size: 1.5em;\n  }\n  \n  .detail-table th, .detail-table td {\n    padding: 12px 8px;\n  }\n}\n\n.detail-table {\n  animation: fadeIn 0.5s ease-in;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.detail-table tr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n\n.detail-table tr:nth-child(even):hover {\n  background-color: #f0f0f0;\n}",
    "html": "<div id=\"root\"></div>",
    "js": "import React from \"https://esm.sh/react@18.2.0\";\nimport ReactDOM from \"https://esm.sh/react-dom@18.2.0\";\n\nfunction parseData(obj) {\n  if (typeof obj === 'string') {\n    try {\n      const parsed = JSON.parse(obj);\n      if (parsed.data && typeof parsed.data === 'string') {\n        return JSON.parse(parsed.data);\n      }\n      return parsed;\n    } catch {\n      return { error: \"Errore di parsing JSON\" }\n    }\n  } else if (obj && typeof obj.data === 'string') {\n    try {\n      return JSON.parse(obj.data);\n    } catch {\n      return { error: \"Errore di parsing JSON\" }\n    }\n  }\n  return obj;\n}\n\nfunction StarRating({ value = 0, onChange }) {\n  const [hoveredStar, setHoveredStar] = React.useState(0);\n\n  return (\n    <div \n      className=\"star-rating\"\n      onMouseLeave={() => setHoveredStar(0)}\n    >\n      {[1, 2, 3, 4, 5].map((star) => {\n        // Determina se la stella dovrebbe essere evidenziata\n        const isHighlighted = hoveredStar > 0 ? star <= hoveredStar : star <= value;\n        const isHovered = hoveredStar > 0 && star === hoveredStar;\n        \n        return (\n          <span\n            key={star}\n            className={`star ${!isHighlighted ? 'inactive' : ''} ${isHovered ? 'hovered' : ''}`}\n            onClick={() => onChange(star)}\n            onMouseEnter={() => setHoveredStar(star)}\n            title={`Valuta ${star}/5`}\n          >\n            ★\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n// COMPONENTE HEADER: usa i dati dal parametro data\nfunction HeaderInfo({ data }) {\n  const formatDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('it-IT', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric'\n      });\n    } catch {\n      return 'N/A';\n    }\n  };\n\n  // Estrai i dati necessari dall'oggetto data del widget\n  const nome = data.Nome || 'N/A';\n  const neg = data.NEG || 'N/A';\n  const dataAssunzione = data.DataAssunzione || null;\n  const dataFineContratto = data.DataFineContratto || null;\n\n  // Debug: mostra i dati disponibili\n  console.log(\"Dati disponibili per HeaderInfo:\", { nome, neg, dataAssunzione, dataFineContratto });\n\n  return (\n    <div className=\"header-info\">\n      <h2 className=\"header-title\">\n        1° Settimana di <span className=\"highlight\">{nome}</span> assunta su <span className=\"highlight\">{neg}</span> il <span className=\"highlight\">{formatDate(dataAssunzione)}</span> con scadenza al <span className=\"highlight\">{formatDate(dataFineContratto)}</span>\n      </h2>\n    </div>\n  );\n}\n\nfunction DetailsTable({ fields, onFieldChange, editingNotes, onNoteFocus, onNoteChange, onNoteBlur }) {\n  function renderInput(key, value) {\n    const noteMatch = key.match(/^[12].*Note.*/i);\n    const scoreMatch = key.match(/^[12](?!.*Note).*/i);\n    if (noteMatch) {\n      return (\n        <textarea\n          value={key in editingNotes ? editingNotes[key] : value ?? ''}\n          onFocus={() => onNoteFocus(key)}\n          onChange={e => onNoteChange(key, e.target.value)}\n          onBlur={() => onNoteBlur(key)}\n          rows={2}\n          placeholder=\"Scrivi una nota...\"\n          autoFocus={false}\n        />\n      );\n    } else if (scoreMatch) {\n      return (\n        <StarRating\n          value={parseInt(value) || 0}\n          onChange={val => onFieldChange(key, val)}\n        />\n      );\n    } else {\n      return <span>{String(value ?? \"\")}</span>;\n    }\n  }\n\n  return (\n    <table className=\"detail-table\">\n      <tbody>\n        {Object.entries(fields).map(([key, value]) => (\n          <tr key={key}>\n            <th>{key}</th>\n            <td>{renderInput(key, value)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nfunction App() {\n  const [data, setData] = React.useState(() => parseData(appsmith.model.data));\n  const [edited, setEdited] = React.useState({});\n  const [editingNotes, setEditingNotes] = React.useState({});\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  const containerRef = React.useRef(null);\n\n  React.useEffect(() => {\n    const parsedData = parseData(appsmith.model.data);\n    setData(parsedData);\n    setEdited({});\n    setEditingNotes({});\n    \n    // FORZA lo scroll all'inizio\n    setTimeout(() => {\n      if (containerRef.current) {\n        containerRef.current.scrollTop = 0;\n      }\n      // Forza anche lo scroll della finestra\n      document.documentElement.scrollTop = 0;\n      document.body.scrollTop = 0;\n      window.scrollTo(0, 0);\n    }, 10);\n  }, [appsmith.model.data]);\n\n  React.useEffect(() => {\n    // Scroll iniziale immediato\n    if (containerRef.current) {\n      containerRef.current.scrollTop = 0;\n    }\n    document.documentElement.scrollTop = 0;\n    document.body.scrollTop = 0;\n    window.scrollTo(0, 0);\n  }, []);\n\n  function updateField(key, value) {\n    const newEdited = { ...edited, [key]: value };\n    setEdited(newEdited);\n    \n    appsmith.updateModel({ \n      data: JSON.stringify(data), \n      edited: JSON.stringify(newEdited),\n      allData: { ...data, ...newEdited },\n      isReady: true\n    });\n  }\n\n  function handleNoteFocus(key) {\n    setEditingNotes((old) => ({ \n      ...old, \n      [key]: edited[key] || data[key] || \"\" \n    }));\n  }\n\n  function handleNoteChange(key, value) {\n    setEditingNotes((old) => ({ ...old, [key]: value }));\n  }\n\n  function handleNoteBlur(key) {\n    updateField(key, editingNotes[key]);\n    setEditingNotes((old) => {\n      const obj = { ...old };\n      delete obj[key];\n      return obj;\n    });\n  }\n\n  async function onInviaClick() {\n    setIsSubmitting(true);\n    try {\n      const finalData = { ...data, ...edited };\n      \n      console.log(\"Dati finali da salvare:\", finalData);\n      \n      appsmith.updateModel({ \n        data: JSON.stringify(data), \n        edited: JSON.stringify(edited),\n        allData: finalData,\n        isReady: true\n      });\n\n      await new Promise(resolve => setTimeout(resolve, 100));\n      await appsmith.triggerEvent(\"onInviaClick\");\n      \n    } catch (error) {\n      console.error(\"Errore durante l'invio:\", error);\n      alert(\"Errore durante il salvataggio: \" + error.message);\n    } finally {\n      setIsSubmitting(false);\n    }\n  }\n\nconst displayValues = {};\n  Object.keys(data).forEach(key => {\n    displayValues[key] = edited.hasOwnProperty(key) ? edited[key] : data[key];\n  });\n\n  return (\n    <div className=\"custom-table-wrapper\" ref={containerRef}>\n      {/* Header fisso in alto */}\n      <HeaderInfo data={data} />\n      \n      {/* Contenitore della tabella con scroll */}\n      <div className=\"table-container\">\n        <DetailsTable\n          fields={displayValues}\n          onFieldChange={updateField}\n          editingNotes={editingNotes}\n          onNoteFocus={handleNoteFocus}\n          onNoteChange={handleNoteChange}\n          onNoteBlur={handleNoteBlur}\n        />\n      </div>\n      \n      {/* Pulsante fisso in basso */}\n      <button \n        className=\"button-invia\" \n        onClick={onInviaClick} \n        type=\"button\"\n        disabled={isSubmitting}\n      >\n        {isSubmitting ? \"Invio in corso...\" : \"Invia\"}\n      </button>\n    </div>\n  );\n}\n\nfunction renderApp() {\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n  \n  // Forza scroll immediato dopo il render\n  setTimeout(() => {\n    document.documentElement.scrollTop = 0;\n    document.body.scrollTop = 0;\n    window.scrollTo(0, 0);\n  }, 0);\n}\n\nappsmith.onReady(() => {\n  // Scroll immediato all'inizio\n  document.documentElement.scrollTop = 0;\n  document.body.scrollTop = 0;\n  window.scrollTo(0, 0);\n  renderApp();\n});\n\nappsmith.onModelChange(() => {\n  renderApp();\n});"
  },
  "version": 1,
  "widgetId": "o077uwuaep",
  "widgetName": "DettaglioSettimanaWidget"
}